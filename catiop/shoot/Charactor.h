
int map1[13][15]={
	{13,14,13,14,13,14,15,16,15,14,13,14,13,14,13},
	{14,13,14,13,14,13,15,16,15,13,14,13,14,13,14},
	{13,14,13,14,13,14,15,16,15,14,13,14,13,14,13},
	{14,13,14,13,14,13,15,16,15,13,14,13,14,13,14},
	{13,14,13,14,13,14,15,16,15,14,13,14,13,14,13},
	{14,13,14,13,14,13,15,16,15,13,14,13,14,13,14},
	{13,14,13,14,13,14,15,16,15,14,13,14,13,14,13},
	{14,13,14,13,14,13,15,16,15,13,14,13,14,13,14},
	{13,14,13,14,13,14,15,16,15,14,13,14,13,14,13},
	{14,13,14,13,14,13,15,16,15,13,14,13,14,13,14},
	{13,14,13,14,13,14,15,16,15,14,13,14,13,14,13},
	{14,13,14,13,14,13,15,16,15,13,14,13,14,13,14},
	{13,14,13,14,13,14,15,16,15,14,13,14,13,14,13}
};
		
int map2[13][15]={
	{13,26,25,26,25,36,15,16,27,36,30,25,30,14,30}, 
	{14,32,27,32,27,28,27,16,15,28,25,26,14,13,14}, 
	{13,14,26,25,26,36,15,27,27,36,30,27,30,27,30}, 
	{27,32,27,32,27,28,27,16,15,28,26,25,26,25,26}, 
	{25,26,25,26,25,36,15,16,27,36,30,27,30,27,30}, 
	{26,32,26,32,26,28,27,27,15,14,25,26,25,26,25}, 
	{28,36,28,36,28,36,15,16,27,36,28,36,28,36,28}, 
	{25,26,25,26,25,14,27,16,15,28,25,32,25,32,25}, 
	{34,27,34,27,34,36,15,27,27,36,26,25,26,25,26}, 
	{26,27,26,27,26,28,27,16,15,28,27,32,27,32,27}, 
	{34,14,34,27,34,36,15,16,27,36,25,26,25,26,13},
	{14,13,25,26,25,28,27,27,15,28,27,32,27,32,14},
	{34,14,34,25,34,36,15,16,27,36,26,25,26,14,13}			
			 
};
int bubble[13][15] = {
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
};
				 
class Charactor {
public:
	int center1;
	int center2;
	int x;
	int y;
	int r;
	int hp;
	int ani1;
	int ani2;
	int down;
	int up;
	int left;
	int right;
	int stop;
	int col;
	int move;
	int initial;
	//20181026
	int x1, x2, y1, y2;
	Charactor(int x, int y)
	{
		//		this->center1=x+14; //중심
		//		this->center2=y+30;	//중심
		this->x = x;
		this->y = y;
		this->r = 39;
		this->hp = 1;
		this->ani1 = 0;
		this->ani2 = 0;
		this->down = 0;
		this->up = 0;
		this->left = 0;
		this->right = 0;
		this->col = 0;
		this->move = 0; //캐릭터 위치 1
		this->initial = 0;
		//20181026
		this->x1 = x - 18;
		this->x2 = x + 18;
		this->y1 = x - 18;
		this->y2 = y + 18;

	}
	void bazziup();
	void bazzidown();
	void bazzileft();
	void bazziright();
	void BazziAniDown();
	void BazziAniUp();
	void BazziAniLeft();
	void BazziAniRight();
	void Render();
};
void Charactor::bazziup()
{
	if ((map2[((y + 59) / 40)][((x + 20) / 40)] == 36)) {
		ani1 = 1000000;
	}
	if (y>0)
	{

		printf("%d\n", map2[((y + 58) / 40) - 1][((x + 24) / 40)]);
		if ((map2[((y + 59) / 40) - 1][((x + 20) / 40)] != 27)
			&& (map2[((y + 59) / 40) - 1][((x + 20) / 40)] != 25)
			&& (map2[((y + 59) / 40) - 1][((x + 20) / 40)] != 26)
			&& (map2[((y + 59) / 40) - 1][((x + 20) / 40)] != 30)
			&& (map2[((y + 59) / 40) - 1][((x + 20) / 40)] != 32)
			&& (map2[((y + 59) / 40) - 1][((x + 39) / 40)] != 34)
			&& (map2[((y + 59) / 40) - 1][((x + 39) / 40)] != 28))

		{
			y -= 2;
		}
	}
	up = 1;
	down = 0;

}
void Charactor::bazzidown()
{
	if (y<460)
	{
		printf("%d\n", map2[((y + 58) / 40) + 1][((x + 24) / 40)]);
		if (((map2[((y + 20) / 40) + 1][((x + 20) / 40)] != 27))
			&& (map2[((y + 20) / 40) + 1][((x + 20) / 40)] != 25)
			&& (map2[((y + 20) / 40) + 1][((x + 20) / 40)] != 26)
			&& (map2[((y + 20) / 40) + 1][((x + 20) / 40)] != 30)
			&& (map2[((y + 20) / 40) + 1][((x + 20) / 40)] != 32)
			&& (map2[((y + 20) / 40) + 1][((x + 20) / 40)] != 34)
			&& (map2[((y + 20) / 40) + 1][((x + 20) / 40)] != 28))
		{
			y += 2;
		}
	}
	down = 1;
	up = 0;
}
void Charactor::bazzileft()
{
	if (x != 0)
	{
		printf("%d\n", map2[((y + 49) / 40)][((x + 20) / 40) - 1]);
		if ((map2[((y + 49) / 40)][((x + 40) / 40) - 1] != 27)
			&& (map2[((y + 49) / 40)][((x + 40) / 40) - 1] != 25)
			&& (map2[((y + 49) / 40)][((x + 40) / 40) - 1] != 26)
			&& (map2[((y + 49) / 40)][((x + 40) / 40) - 1] != 30)
			&& (map2[((y + 49) / 40)][((x + 40) / 40) - 1] != 32)
			&& (map2[((y + 49) / 40)][((x + 40) / 40) - 1] != 34)
			&& (map2[((y + 49) / 40)][((x + 40) / 40) - 1] != 28))
		{
			x -= 2;
		}
	}
	left = 1;
}
void Charactor::bazziright()
{
	if (x != 560)
	{
		printf("%d\n", map2[((y + 49) / 40)][((x + 20) / 40) + 1]);
		if ((map2[((y + 49) / 40)][((x) / 40) + 1] != 27)
			&& (map2[((y + 49) / 40)][((x) / 40) + 1] != 25)
			&& (map2[((y + 49) / 40)][((x) / 40) + 1] != 26)
			&& (map2[((y + 49) / 40)][((x) / 40) + 1] != 28)
			&& (map2[((y + 49) / 40)][((x) / 40) + 1] != 30)
			&& (map2[((y + 49) / 40)][((x) / 40) + 1] != 32)
			&& (map2[((y + 49) / 40)][((x) / 40) + 1] != 34))
		{
			x += 2;
		}
	}
	right = 1;
}

//밑으로 갈때 배찌 애니
void Charactor::BazziAniDown()
{
	if (down == 1)
	{
		if (ani1 == 3)
		{
			ani1 = 0;
		}
		else
		{
			ani1++;
			down = 0;
		}
		stop = 1; //밑으로갈때 정지
	}
}
void Charactor::BazziAniUp()
{
	if (up == 1)
	{

		if (ani1 == 3)
		{
			ani1 = 0;
		}
		else
		{
			ani1++;
			up = 0;
		}
		stop = 2;
	}
}
void Charactor::BazziAniLeft()
{
	if (left == 1)
	{
		if (ani1 == 3)
		{
			ani1 = 0;
		}
		else
		{
			ani1++;
			left = 0;
		}
		stop = 3;
	}
}
void Charactor::BazziAniRight()
{
	if (right == 1)
	{
		if (ani1 == 3)
		{
			ani1 = 0;
		}
		else
		{
			ani1++;
			right = 0;
		}
		stop = 4;
	}
}
void Charactor::Render()
{
	//시작 캐릭

	BitBlt(hOffdc, x, y, 48, 60, hMemdc[2], initial * 10000, 0, SRCAND);
	BitBlt(hOffdc, x, y, 48, 60, hMemdc[1], initial * 10000, 0, SRCPAINT);


	//밑으로갈때 배찌 애니
	if (down == 1)
	{
		initial++;
		BitBlt(hOffdc, x, y, 46, 58, hMemdc[6], 48 * ani1, 0, SRCAND);
		BitBlt(hOffdc, x, y, 46, 58, hMemdc[5], 48 * ani1, 0, SRCPAINT);

	}
	else if (stop == 1)
	{
		//배찌	
		{

			BitBlt(hOffdc, x, y, 48, 60, hMemdc[2], 0, 0, SRCAND);
			BitBlt(hOffdc, x, y, 48, 60, hMemdc[1], 0, 0, SRCPAINT);

		}
	}

	//위로갈때 배찌 애니
	if (up == 1)
	{
		initial++;
		BitBlt(hOffdc, x, y, 48, 60, hMemdc[8], 46 * ani1, 58, SRCAND);
		BitBlt(hOffdc, x, y, 48, 60, hMemdc[8], 46 * ani1, 0, SRCPAINT);

	}

	else if (stop == 2)
	{
		//배찌	
		{

			BitBlt(hOffdc, x, y, 48, 60, hMemdc[7], 0, 60, SRCAND);
			BitBlt(hOffdc, x, y, 48, 60, hMemdc[7], 0, 0, SRCPAINT);

		}
	}

	//왼쪽 갈때 배찌 애니
	if (left == 1)
	{
		initial++;
		BitBlt(hOffdc, x, y, 46, 58, hMemdc[18], 46 * ani1, 0, SRCAND);
		BitBlt(hOffdc, x, y, 46, 58, hMemdc[17], 46 * ani1, 0, SRCPAINT);

	}
	else if (stop == 3)
	{
		//배찌	
		{

			BitBlt(hOffdc, x, y, 48, 60, hMemdc[20], 0, 0, SRCAND);
			BitBlt(hOffdc, x, y, 48, 60, hMemdc[19], 0, 0, SRCPAINT);

		}
	}
	//오른쪽 갈때 배찌 애니
	if (right == 1)
	{
		initial++;
		BitBlt(hOffdc, x, y, 46, 58, hMemdc[10], 46 * ani1, 0, SRCAND);
		BitBlt(hOffdc, x, y, 46, 58, hMemdc[9], 46 * ani1, 0, SRCPAINT);


	}
	else if (stop == 4)
	{
		//배찌	
		{

			BitBlt(hOffdc, x, y, 48, 60, hMemdc[12], 0, 0, SRCAND);  // <- 식별자 오류
			BitBlt(hOffdc, x, y, 48, 60, hMemdc[11], 0, 0, SRCPAINT);

		}
	}

}
